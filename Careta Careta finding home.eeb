<xml xmlns="http://www.w3.org/1999/xhtml">
  <block type="new_event_start" id="vPEah;f,5Vq@@LR1BgJI" deletable="false" movable="false" x="18" y="148">
    <next>
      <block type="drive_line_tracking_obstacle" id="yv!Yr-Msy[4S[A]U@wew">
        <next>
          <block type="drive_stop" id="A/Gp_Vpb5eA4F}%^=;3t">
            <next>
              <block type="drive_backwards_time" id="1?KQ7JM[]D;!pg4e2Lda">
                <value name="DURATION">
                  <shadow type="math_positive_number" id=",yDOC0g^kVGgDhGh3`6g">
                    <field name="NUM">0.5</field>
                  </shadow>
                </value>
                <next>
                  <block type="light_sound_play_whole" id="+Y.P221f!@pB^^SLE/OD">
                    <value name="CHOICE">
                      <shadow type="dropdown_light_sound_play_whole" id="%z(4LsxMr#t+Ch]oTQCz">
                        <field name="CHOICE">A</field>
                      </shadow>
                    </value>
                    <next>
                      <block type="drive_left_time" id="xR}1,s^,xQVe|%l[#099">
                        <value name="DURATION">
                          <shadow type="math_positive_number" id="/U2*yyU#GKbtwS}39;HA">
                            <field name="NUM">1</field>
                          </shadow>
                        </value>
                        <next>
                          <block type="light_sound_play_whole" id="+Q49r:,0)u6dxViBn/,Z">
                            <value name="CHOICE">
                              <shadow type="dropdown_light_sound_play_whole" id="`tQ*f@Wm-N,rha!*1cs3">
                                <field name="CHOICE">F</field>
                              </shadow>
                            </value>
                            <next>
                              <block type="drive_right_time" id="nY()EhdtQQ~pUlgHB}t5">
                                <value name="DURATION">
                                  <shadow type="math_positive_number" id="_KJ6uaQJOXPB2vK1:1TV">
                                    <field name="NUM">1</field>
                                  </shadow>
                                </value>
                              </block>
                            </next>
                          </block>
                        </next>
                      </block>
                    </next>
                  </block>
                </next>
              </block>
            </next>
          </block>
        </next>
      </block>
    </next>
  </block>
</xml>